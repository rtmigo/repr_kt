################################################################################
# 2022-10-21 19:26 | DO NOT EDIT. GENERATED BY ATOMATR 
################################################################################

name: Gradle (by Atomatr)

on:
  push:
    branches: [ dev ]
    paths-ignore:
      - '**.md'
      - '**.txt'

concurrency:
  group: '${{ github.workflow }} 
          @ ${{ github.event.pull_request.head.label 
                || github.head_ref 
                || github.ref }}'
  cancel-in-progress: true

jobs:
  release-flag:
    if: contains(github.event.head_commit.message, '!!release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

  unit-test:
    timeout-minutes: 15

    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, 
                      'Merge remote-tracking branch') }}

    strategy:
      matrix:
        os: [ ubuntu-latest ] 
        jdk_version: [ 8, 18 ]

    steps:
      - uses: actions/checkout@master
      - name: Update submodules
        run: git submodule update --init --recursive
      - name: Setup JDK ${{ matrix.jdk_version }}
        uses: actions/setup-java@master
        with:
          java-version: ${{ matrix.jdk_version }}
          distribution: 'temurin'
          cache: gradle
      - name: Run unit tests
        run: gradle test --no-daemon --info

  test-dev-as-module-from-git:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ] 
    steps:
      - uses: actions/checkout@master

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Setup JDK 8
        uses: actions/setup-java@master
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: '3.10'

      - name: Build sample project that uses the library
        run: |
          pip install git+https://github.com/rtmigo/tempground_py
          python test_as_git_module.py dev

  test-as-maven-package:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@master

      - name: Setup JDK 8
        uses: actions/setup-java@master
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Mavence
        run: | 
          wget -O ~/mavence.jar \
            https://github.com/rtmigo/mavence/releases/latest/download/mavence.jar
          java -jar ~/mavence.jar --version

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: '3.10'

      - name: Build sample project that uses the library
        run: |
          pip install git+https://github.com/rtmigo/tempground_py
          python test_as_maven_package.py          

  get-version-unique:
    needs: [release-flag]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.result }}
    steps:
      - uses: actions/checkout@master
      - name: Setup JDK
        uses: actions/setup-java@master
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle
      - name: Get the project version
        id: get_version
        run: |
          git fetch --all --tags
          VERSION=$(./gradlew properties | grep version | awk '{print $2}')
          echo "Version $VERSION"
          
          [[ -z $(git tag -l $VERSION) ]]  
          
          echo "result=$VERSION" >>$GITHUB_OUTPUT

  to-staging:
    needs: [ unit-test, test-dev-as-module-from-git, test-as-maven-package ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge current -> staging
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: staging
          github_token: ${{ github.token }}

  to-master:
    needs: [ to-github-release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge to master branch
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: master
          github_token: ${{ github.token }}

  to-github-release:
    needs: [ to-staging, release-flag, get-version-unique ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish GitHub release
        id: publish_github_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.get-version-unique.outputs.version }}
          files: ./build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-can-publish-to-central:
    needs: [release-flag]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Mavence
        run: | 
          wget -O ~/mavence.jar \
            https://github.com/rtmigo/mavence/releases/latest/download/mavence.jar
          java -jar ~/mavence.jar --version
      - name: Check 
        run: java -jar ~/mavence.jar check-central
        env:
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_KEY }}
          MAVEN_GPG_PASSWORD: ${{ secrets.MAVEN_GPG_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

  to-maven-central:
    needs: [ to-github-release, check-can-publish-to-central ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup JDK 17
        uses: actions/setup-java@master
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Set up Mavence
        run: | 
          wget -O ~/mavence.jar \
            https://github.com/rtmigo/mavence/releases/latest/download/mavence.jar
          java -jar ~/mavence.jar --version
      - name: Publish to Maven Central
        run: |
          java -jar ~/mavence.jar central
        env:
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_KEY }}
          MAVEN_GPG_PASSWORD: ${{ secrets.MAVEN_GPG_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}